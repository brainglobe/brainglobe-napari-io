[project]
name = "brainglobe-napari-io"
authors = [{name = "Adam Tyson", email= "hello@brainglobe.info"}]
description = "Read and write files from the BrainGlobe computational neuroanatomy suite into napari"
readme = "README.md"
requires-python = ">=3.9.0"
dynamic = ["version"]

license = {text = "BSD-3-Clause"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: napari",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Image Recognition",
]
dependencies = [
    "bg-atlasapi",
    "bg_space",
    "brainglobe-utils",
    "napari",
    "tifffile>=2020.8.13",
    "numpy",
    "pandas",
]

[project.urls]
Homepage = "https://brainglobe.info"
"Source Code" = "https://github.com/brainglobe/brainglobe-napari-io"
"Bug Tracker" = "https://github.com/brainglobe/brainglobe-napari-io/issues"
Documentation = "https://docs.brainglobe.info"
"User Support" = "https://forum.image.sc/tag/brainglobe"
Twitter = "https://twitter.com/brain_globe"

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-cov",
  "coverage",
  "tox",
  "black",
  "mypy",
  "pre-commit",
  "ruff",
  "setuptools_scm",
]


[project.entry-points."napari.manifest"]
brainglobe-napari-io = "brainglobe_napari_io:napari.yaml"


[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["brainglobe_napari_io*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
addopts = "--cov=brainglobe_napari_io"

[tool.black]
target-version = ['py39', 'py310', 'py311']
skip-string-normalization = false
line-length = 79

[tool.setuptools_scm]

[tool.check-manifest]
ignore = [
  ".yaml",
  "tox.ini",
  "tests/",
  "tests/test_unit/",
  "tests/test_integration/",
]

[tool.ruff]
line-length = 79
exclude = ["__init__.py","build",".eggs"]
select = ["I", "E", "F"]
fix = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{39,310,311}
isolated_build = True

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
extras =
    dev
commands =
    pytest -v --color=yes --cov=brainglobe_napari_io --cov-report=xml
"""
